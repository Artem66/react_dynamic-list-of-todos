{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","todos","onSelect","selectedTodoId","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","handleChange","handleSearch","selectedFilter","query","clearQuery","value","onChange","placeholder","style","pointerEvents","Loader","TodoModal","clearSelectedTodo","selectedTodo","user","href","email","name","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Filter","App","useState","visibleTodos","setVisibleTodos","setSelectedFilter","setQuery","setSelectedTodo","setSelectedTodoId","setUser","todosFromServer","a","newTodos","active","all","filter","useMemo","userFromServer","newUser","userId","getVisibleTodos","toLowerCase","includes","event","target","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0149a77.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodoId: number | null;\n  onSelect: ((todo: Todo) => void)\n};\n\n// eslint-disable-next-line max-len\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  // selectedTodo,\n  onSelect,\n  selectedTodoId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed\n            && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames('', {\n              'has-text-success': todo.completed,\n              'has-text-danger': !todo.completed,\n            })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelect(todo)}\n            >\n              {selectedTodoId === todo.id\n                ? (\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye-slash\" />\n                  </span>\n                )\n                : (\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                )}\n\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","type Props = {\n  handleChange: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n  handleSearch: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  selectedFilter: string;\n  query: string;\n  clearQuery: () => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  handleChange,\n  handleSearch,\n  selectedFilter,\n  query,\n  clearQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={selectedFilter}\n          onChange={handleChange}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={handleSearch}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n      {query !== ''\n      && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={clearQuery}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo\n  clearSelectedTodo: () => void;\n  user: User | null;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  clearSelectedTodo,\n  selectedTodo,\n  user,\n}) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {user === null\n        ? (\n          <Loader />\n        ) : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodo.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => clearSelectedTodo()}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {/* <strong className=\"has-text-success\">Done</strong> */}\n                {selectedTodo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useState, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos, getUser } from './api';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nenum Filter {\n  all = 'all',\n  completed = 'completed',\n  active = 'active',\n}\n\nexport const App: React.FC = () => {\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [selectedFilter, setSelectedFilter] = useState('all');\n  const [query, setQuery] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [selectedTodoId, setSelectedTodoId] = useState<number | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n\n  const handleSelect = (todo: Todo) => {\n    setSelectedTodo(todo);\n    setSelectedTodoId(todo.id);\n  };\n\n  const clearSelectedTodo = () => {\n    setSelectedTodo(null);\n    setSelectedTodoId(null);\n  };\n\n  const handleChange = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setSelectedFilter(event.target.value);\n  };\n\n  const handleSearch = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setQuery(event.target.value);\n  };\n\n  const clearQuery = () => {\n    setQuery('');\n  };\n\n  // eslint-disable-next-line consistent-return\n  const todosFromServer = async () => {\n    const newTodos: Todo[] = await getTodos();\n\n    switch (selectedFilter) {\n      case Filter.completed:\n        return setVisibleTodos(newTodos.filter(todo => todo.completed === true));\n\n      case Filter.active:\n        return setVisibleTodos(newTodos.filter(todo => todo.completed === false));\n\n      case Filter.all:\n      default:\n        setVisibleTodos(newTodos);\n    }\n  };\n\n  useMemo(\n    todosFromServer,\n    [selectedFilter],\n  );\n\n  const userFromServer = async () => {\n    let newUser = null;\n\n    if (selectedTodo !== null) {\n      newUser = await getUser(selectedTodo.userId);\n    }\n\n    setUser(newUser);\n  };\n\n  useMemo(\n    userFromServer,\n    [selectedTodo],\n  );\n\n  const getVisibleTodos = () => {\n    if (query !== '') {\n      return visibleTodos.filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n    }\n\n    return visibleTodos;\n  };\n\n  useMemo(\n    getVisibleTodos,\n    [query],\n  );\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                handleChange={handleChange}\n                selectedFilter={selectedFilter}\n                handleSearch={handleSearch}\n                query={query}\n                clearQuery={clearQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {\n                visibleTodos.length === 0\n                  ? <Loader />\n                  : (\n                    <TodoList\n                      todos={getVisibleTodos()}\n                      selectedTodoId={selectedTodoId}\n                      onSelect={handleSelect}\n                    />\n                  )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo !== null && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          clearSelectedTodo={clearSelectedTodo}\n          user={user}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}